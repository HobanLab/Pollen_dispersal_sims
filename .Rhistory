ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "All same", "Skewed")) +
labs(color = "Donor Type")
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(as.numeric(maternal_trees)), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(mapping = aes(x=total_seeds, y=pmu, lty=donor_type)) +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "All same", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
#defining more descriptive labels for the facets
mat_tree_labs = c("1", "2", "5", "10", "25", "50", "100")
names(mat_tree_labs) = c("1 maternal tree", "2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(as.numeric(maternal_trees)), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(mapping = aes(x=total_seeds, y=pmu, lty=donor_type)) +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "All same", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
#Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
theme_set(theme_bw())
#Load in ideal data
load("tidy_df.Rdata")
#Load in ideal data
load("tidy_df.Rdata")
tidy_df_ideal = tidy_df
#remove col to make same # cols
tidy_df_ideal = subset(tidy_df_ideal, select = -c(seeds_per_tree))
#Realistic data
load("tidy_df_realistic.Rdata")
tidy_df_realistic = tidy_df
#Create new columns to identify scenarios
tidy_df_ideal$samp_type = "ideal"
tidy_df_realistic$samp_type = "realistic"
#Combine dataframes
combined_ideal_real = rbind(tidy_df_ideal, tidy_df_realistic)
str(combined_ideal_real)
#Convert to factors for ANOVA
combined_ideal_real$donor_type = factor(combined_ideal_real$donor_type)
combined_ideal_real$maternal_trees = factor(combined_ideal_real$maternal_trees)
combined_ideal_real$samp_type = factor(combined_ideal_real$samp_type)
combined_ideal_real$prop_capt = as.numeric(combined_ideal_real$prop_capt)
#defining more descriptive labels for the facets
mat_tree_labs = c("2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
names(mat_tree_labs) = c("2", "5", "10", "25", "50", "100")
#defining a color palette to use for the plots (color-blind accessible)
cbPalette <- c("#E69F00", "#f5d58e", "#96daf2", "#56B4E9", "#CC79A7", "#fcd2e9")
#Plotting the data
combined_ideal_real %>%
filter(total_seeds==200) %>%
filter(as.numeric(maternal_trees)>1) %>%
ggplot(aes(x=donor_type, y=as.numeric(prop_capt), color=samp_type)) +
geom_boxplot() +
facet_wrap(vars(as.numeric(maternal_trees))) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0,1) +
ggtitle("Genetic diversity capture for scenarios with 200 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
labs(color = "Sampling Type") +
scale_x_discrete(labels=c("Eligible","Same","Skewed")) +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "All same", "Skewed"))
#Plotting the data
combined_ideal_real %>%
filter(total_seeds==200) %>%
filter(as.numeric(maternal_trees)>1) %>%
ggplot(aes(x=donor_type, y=as.numeric(prop_capt), color=samp_type, fill=donor_type)) +
geom_boxplot() +
facet_wrap(vars(as.numeric(maternal_trees))) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0,1) +
ggtitle("Genetic diversity capture for scenarios with 200 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
labs(color = "Sampling Type") +
scale_x_discrete(labels=c("Eligible","Same","Skewed")) +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "All same", "Skewed"))
#Plotting the data
combined_ideal_real %>%
filter(total_seeds==200) %>%
filter(as.numeric(maternal_trees)>1) %>%
ggplot(aes(x=donor_type, y=as.numeric(prop_capt), color=interaction(samp_type, donor_type))) +
geom_boxplot() +
facet_wrap(vars(as.numeric(maternal_trees))) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0,1) +
ggtitle("Genetic diversity capture for scenarios with 200 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
labs(color = "Sampling Type") +
scale_x_discrete(labels=c("Eligible","Same","Skewed")) +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "All same", "Skewed"))
#defining a color palette to use for the plots (color-blind accessible)
cbPalette <- c("#E69F00", "#f5d58e", "#56B4E9", "#96daf2", "#CC79A7", "#fcd2e9")
#Plotting the data
combined_ideal_real %>%
filter(total_seeds==200) %>%
filter(as.numeric(maternal_trees)>1) %>%
ggplot(aes(x=donor_type, y=as.numeric(prop_capt), color=interaction(samp_type, donor_type))) +
geom_boxplot() +
facet_wrap(vars(as.numeric(maternal_trees))) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0,1) +
ggtitle("Genetic diversity capture for scenarios with 200 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
labs(color = "Sampling Type") +
scale_x_discrete(labels=c("Eligible","Same","Skewed")) +
scale_colour_manual(values=cbPalette, labels = c("Eligible ideal", "Eligible realistic", "Skewed ideal", "Skewed realistic", "Same ideal", "Same realistic"))
#defining more descriptive labels for the facets
mat_tree_labs = c("2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
names(mat_tree_labs) = c("2", "5", "10", "25", "50", "100")
#defining a color palette to use for the plots (color-blind accessible)
cbPalette <- c("#E69F00", "#f5d58e", "#56B4E9", "#96daf2", "#CC79A7", "#fcd2e9")
type(combined_ideal_real$maternal_trees)
combined_ideal_real$maternal_trees
combined_ideal_real$maternal_trees = as.numeric(combined_ideal_real$maternal_trees)
#defining more descriptive labels for the facets
mat_tree_labs = c("2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
names(mat_tree_labs) = c("2", "5", "10", "25", "50", "100")
#defining a color palette to use for the plots (color-blind accessible)
cbPalette <- c("#E69F00", "#f5d58e", "#56B4E9", "#96daf2", "#CC79A7", "#fcd2e9")
#Plotting the data
combined_ideal_real %>%
filter(total_seeds==200) %>%
filter(as.numeric(maternal_trees)>1) %>%
ggplot(aes(x=donor_type, y=as.numeric(prop_capt), color=interaction(samp_type, donor_type))) +
geom_boxplot() +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0,1) +
ggtitle("Genetic diversity capture for scenarios with 200 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
labs(color = "Sampling Type") +
scale_x_discrete(labels=c("Eligible","Same","Skewed")) +
scale_colour_manual(values=cbPalette, labels = c("Eligible ideal", "Eligible realistic", "Skewed ideal", "Skewed realistic", "Same ideal", "Same realistic"))
#Plotting the data
combined_ideal_real %>%
filter(total_seeds==200) %>%
filter(as.numeric(maternal_trees)>1) %>%
ggplot() +
geom_boxplot(aes(x=donor_type, y=as.numeric(prop_capt), color=interaction(samp_type, donor_type))) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0,1) +
ggtitle("Genetic diversity capture for scenarios with 200 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
labs(color = "Sampling Type") +
scale_x_discrete(labels=c("Eligible","Same","Skewed")) +
scale_colour_manual(values=cbPalette, labels = c("Eligible ideal", "Eligible realistic", "Skewed ideal", "Skewed realistic", "Same ideal", "Same realistic"))
levels(combined_ideal_real$maternal_trees)
str(combined_ideal_real$maternal_trees)
View(combined_ideal_real)
#Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
theme_set(theme_bw())
#Load in ideal data
load("tidy_df.Rdata")
tidy_df_ideal = tidy_df
#remove col to make same # cols
tidy_df_ideal = subset(tidy_df_ideal, select = -c(seeds_per_tree))
View(tidy_df_ideal)
#Realistic data
load("tidy_df_realistic.Rdata")
tidy_df_realistic = tidy_df
#Create new columns to identify scenarios
tidy_df_ideal$samp_type = "ideal"
tidy_df_realistic$samp_type = "realistic"
#Combine dataframes
combined_ideal_real = rbind(tidy_df_ideal, tidy_df_realistic)
#Make sure variables are in the correct format
combined_ideal_real$donor_type = factor(combined_ideal_real$donor_type)
combined_ideal_real$samp_type = factor(combined_ideal_real$samp_type)
combined_ideal_real$prop_capt = as.numeric(combined_ideal_real$prop_capt)
combined_ideal_real$maternal_trees = as.numeric(combined_ideal_real$maternal_trees)
#defining more descriptive labels for the facets
mat_tree_labs = c("2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
names(mat_tree_labs) = c("2", "5", "10", "25", "50", "100")
#defining a color palette to use for the plots (color-blind accessible)
cbPalette <- c("#E69F00", "#f5d58e", "#56B4E9", "#96daf2", "#CC79A7", "#fcd2e9")
#Plotting the data
combined_ideal_real %>%
filter(total_seeds==200) %>%
filter(as.numeric(maternal_trees)>1) %>%
ggplot() +
geom_boxplot(aes(x=donor_type, y=as.numeric(prop_capt), color=interaction(samp_type, donor_type))) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0,1) +
ggtitle("Genetic diversity capture for scenarios with 200 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
labs(color = "Sampling Type") +
scale_x_discrete(labels=c("Eligible","Same","Skewed")) +
scale_colour_manual(values=cbPalette, labels = c("Eligible ideal", "Eligible realistic", "Skewed ideal", "Skewed realistic", "Same ideal", "Same realistic"))
p_vals_same = c()
ideal_avg = c()
realistic_avg = c()
mat_trees = c(2, 5, 10, 25, 50, 100)
for(i in 1:length(mat_trees)) {
subset = combined_ideal_real %>% filter(total_seeds == 200) %>% filter(maternal_trees == mat_trees[i]) %>% filter(donor_type == 'all_same')
ideal_avg[i] = mean((subset %>% filter(samp_type == "ideal"))$prop_capt)
realistic_avg[i] = mean((subset %>% filter(samp_type == "realistic"))$prop_capt)
p_vals_same[i] = t.test(subset$prop_capt ~ subset$samp_type)$p.value
}
same_table = data.frame(donor_type = rep("same", 6), maternal_trees_samp = mat_trees, tot_seeds_sampled = rep(200, 6), prop_capt_ideal = ideal_avg, prop_capt_realistic = realistic_avg, p_value = p_vals_same)
same_table
p_vals_skewed = c()
mat_trees = c(2, 5, 10, 25, 50, 100)
for(i in 1:length(mat_trees)) {
subset = combined_ideal_real %>% filter(total_seeds == 200) %>% filter(maternal_trees == mat_trees[i]) %>% filter(donor_type == 'skewed')
ideal_avg[i] = mean((subset %>% filter(samp_type == "ideal"))$prop_capt)
realistic_avg[i] = mean((subset %>% filter(samp_type == "realistic"))$prop_capt)
p_vals_skewed[i] = t.test(subset$prop_capt ~ subset$samp_type)$p.value
}
skewed_table
p_vals_same = c()
ideal_avg = c()
realistic_avg = c()
mat_trees = c(2, 5, 10, 25, 50, 100)
for(i in 1:length(mat_trees)) {
subset = combined_ideal_real %>% filter(total_seeds == 200) %>% filter(maternal_trees == mat_trees[i]) %>% filter(donor_type == 'all_same')
ideal_avg[i] = mean((subset %>% filter(samp_type == "ideal"))$prop_capt)
realistic_avg[i] = mean((subset %>% filter(samp_type == "realistic"))$prop_capt)
p_vals_same[i] = t.test(subset$prop_capt ~ subset$samp_type)$p.value
}
same_table = data.frame(donor_type = rep("same", 6), maternal_trees_samp = mat_trees, tot_seeds_sampled = rep(200, 6), prop_capt_ideal = ideal_avg, prop_capt_realistic = realistic_avg, p_value = p_vals_same)
same_table
p_vals_skewed = c()
mat_trees = c(2, 5, 10, 25, 50, 100)
for(i in 1:length(mat_trees)) {
subset = combined_ideal_real %>% filter(total_seeds == 200) %>% filter(maternal_trees == mat_trees[i]) %>% filter(donor_type == 'skewed')
ideal_avg[i] = mean((subset %>% filter(samp_type == "ideal"))$prop_capt)
realistic_avg[i] = mean((subset %>% filter(samp_type == "realistic"))$prop_capt)
p_vals_skewed[i] = t.test(subset$prop_capt ~ subset$samp_type)$p.value
}
skewed_table = data.frame(donor_type = rep("skewed", 6), maternal_trees_samp = mat_trees, tot_seeds_sampled = rep(200, 6), prop_capt_ideal = ideal_avg, prop_capt_realistic = realistic_avg, p_value = p_vals_skewed)
p_vals_eligible = c()
mat_trees = c(2, 5, 10, 25, 50, 100)
for(i in 1:length(mat_trees)) {
subset = combined_ideal_real %>% filter(total_seeds == 200) %>% filter(maternal_trees == mat_trees[i]) %>% filter(donor_type == 'all_eligible')
ideal_avg[i] = mean((subset %>% filter(samp_type == "ideal"))$prop_capt)
realistic_avg[i] = mean((subset %>% filter(samp_type == "realistic"))$prop_capt)
p_vals_eligible[i] = t.test(subset$prop_capt ~ subset$samp_type)$p.value
}
eligible_table = data.frame(donor_type = rep("eligible", 6), maternal_trees_samp = mat_trees, tot_seeds_sampled = rep(200, 6), prop_capt_ideal = ideal_avg, prop_capt_realistic = realistic_avg, p_value = p_vals_eligible)
p_values_combined = rbind(same_table, skewed_table, eligible_table)
p_values_combined = signif(p_values_combined, digits = 3)
p_values_combined = signif(p_values_combined$p_value, digits = 3)
p_values_combined = rbind(same_table, skewed_table, eligible_table)
p_values_combined$p_value = signif(p_values_combined$p_value, digits = 3)
p_values_combined$p_value = signif(p_values_combined$p_value, digits = 3)
p_values_combined$prop_capt_ideal = signif(p_values_combined$prop_capt_ideal)
p_values_combined$prop_capt_realistic = signif(p_values_combined$prop_capt_realistic)
p_values_combined = p_values_combined[order(maternal_trees),]
p_values_combined = p_values_combined[order(p_values_combined$maternal_trees),]
install.packages("ggprism")
write.csv(p_values_combined)
getwd()
write.csv(p_values_combined, file="R-scripts/p_values_ideal_realistic.csv")
write.csv(p_values_combined, file="/R-scripts/p_values_ideal_realistic.csv")
getwd()
write.csv(p_values_combined, file='/R-scripts/p_values_ideal_realistic.csv')
write.csv(p_values_combined, file='../../R-scripts/p_values_ideal_realistic.csv')
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(as.numeric(maternal_trees)), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(mapping = aes(x=total_seeds, y=pmu, lty=donor_type, label=FALSE)) +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "All same", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(as.numeric(maternal_trees)), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(mapping = aes(x=total_seeds, y=pmu, lty=donor_type)) +
theme(legend.position = "none") +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "All same", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
#Load in data
load("tidy_df.Rdata")
#Converting these to numeric--they already should be, but they must have been converted accidentally when making the matrix a dataframe, etc...
tidy_df$prop_capt = as.numeric(tidy_df$prop_capt)
tidy_df$total_seeds = as.numeric(tidy_df$total_seeds)
#Running the model
transformed_model = lm(prop_capt ~ log(total_seeds) * log(maternal_trees) * donor_type, data = tidy_df) #removed weights=total_seeds
# #Save the model since it takes so long to run
save(transformed_model, file = "transformed_model.Rdata")
#Running the model
transformed_model = lm(prop_capt ~ log(total_seeds) * log(maternal_trees) * donor_type, data = tidy_df) #removed weights=total_seeds
#Converting these to numeric--they already should be, but they must have been converted accidentally when making the matrix a dataframe, etc...
tidy_df$prop_capt = as.numeric(tidy_df$prop_capt)
tidy_df$total_seeds = as.numeric(tidy_df$total_seeds)
tidy_df$maternal_trees = as.numeric(tidy_df$maternal_trees)
#Running the model
transformed_model = lm(prop_capt ~ log(total_seeds) * log(maternal_trees) * donor_type, data = tidy_df) #removed weights=total_seeds
#Creating a new dataframe of values to base predictions on
newd = data.frame(maternal_trees=(rep(c(1,2,5,10,25,50,100), each=1500)), total_seeds=rep(seq(1,500,1),21), donor_type=factor(rep((rep(c("all_eligible", "all_same", "skewed"), each=500)), 7)))
#Predictions
pmu = predict(transformed_model, re.form=NA, transform = TRUE, newdata=newd)
#Creating a dataframe to plot in ggplot
preds <- cbind(newd, pmu)
#defining a color palette to use for the plots (color-blind accessible)
cbPalette <- c("#E69F00", "#56B4E9", "#CC79A7")
#defining more descriptive labels for the facets
mat_tree_labs = c("1", "2", "5", "10", "25", "50", "100")
names(mat_tree_labs) = c("1 maternal tree", "2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(as.numeric(maternal_trees)), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(mapping = aes(x=total_seeds, y=pmu, lty=donor_type)) +
theme(legend.position = "none") +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "All same", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
#defining more descriptive labels for the facets
mat_tree_labs = c("1 maternal tree", "2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
names(mat_tree_labs) = c("1", "2", "5", "10", "25", "50", "100")
#Plotting the data
p1 = ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(as.numeric(maternal_trees)), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(mapping = aes(x=total_seeds, y=pmu, lty=donor_type)) +
theme(legend.position = "none") +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled")
p1 + scale_colour_manual(values=cbPalette, labels = c("All eligible", "All same", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(as.numeric(maternal_trees)), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(mapping = aes(x=total_seeds, y=pmu), lty=donor_type) +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "All same", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(as.numeric(maternal_trees)), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(data=preds, mapping = aes(x=total_seeds, y=pmu), lty=donor_type) +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "All same", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(as.numeric(maternal_trees)), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(data=preds, mapping = aes(x=total_seeds, y=pmu), lty=donor_type) +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "All same", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(as.numeric(maternal_trees)), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(data=preds, mapping = aes(x=total_seeds, y=pmu, lty=donor_type)) +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "All same", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
#Converting these to numeric--they already should be, but they must have been converted accidentally when making the matrix a dataframe, etc...
tidy_df$prop_capt = as.numeric(tidy_df$prop_capt)
tidy_df$total_seeds = as.numeric(tidy_df$total_seeds)
tidy_df$maternal_trees = as.numeric(tidy_df$maternal_trees)
#defining more descriptive labels for the facets
mat_tree_labs = c("1 maternal tree", "2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
names(mat_tree_labs) = c("1", "2", "5", "10", "25", "50", "100")
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(data=preds, mapping = aes(x=total_seeds, y=pmu, lty=donor_type), show.legend=F) +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "All same", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
#Plotting the data
combined_ideal_real %>%
filter(total_seeds==200) %>%
filter(as.numeric(maternal_trees)>1) %>%
ggplot() +
geom_boxplot(aes(x=donor_type, y=as.numeric(prop_capt), color=interaction(samp_type, donor_type))) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0.25,1) +
ggtitle("Genetic diversity capture for scenarios with 200 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
labs(color = "Sampling Type") +
scale_x_discrete(labels=c("Eligible","Same","Skewed")) +
scale_colour_manual(values=cbPalette, labels = c("Eligible ideal", "Eligible realistic", "Skewed ideal", "Skewed realistic", "Same ideal", "Same realistic"))
#Load libraries
library(dplyr)
library(ggplot2)
theme_set(theme_bw())
#Load in ideal data
load("tidy_df.Rdata")
#Load in ideal data
load("tidy_df.Rdata")
tidy_df_ideal = tidy_df
tidy_df_ideal = tidy_df
#remove col to make same # cols
tidy_df_ideal = subset(tidy_df_ideal, select = -c(seeds_per_tree))
tidy_df_realistic = tidy_df
#Create new columns to identify scenarios
tidy_df_ideal$samp_type = "ideal"
tidy_df_realistic$samp_type = "realistic"
#Combine dataframes
combined_ideal_real = rbind(tidy_df_ideal, tidy_df_realistic)
#Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
theme_set(theme_bw())
#Load in ideal data
load("tidy_df.Rdata")
tidy_df_ideal = tidy_df
#remove col to make same # cols
tidy_df_ideal = subset(tidy_df_ideal, select = -c(seeds_per_tree))
#Realistic data
load("tidy_df_realistic.Rdata")
tidy_df_realistic = tidy_df
#Create new columns to identify scenarios
tidy_df_ideal$samp_type = "ideal"
tidy_df_realistic$samp_type = "realistic"
#Combine dataframes
combined_ideal_real = rbind(tidy_df_ideal, tidy_df_realistic)
#Make sure variables are in the correct format
combined_ideal_real$donor_type = factor(combined_ideal_real$donor_type)
combined_ideal_real$samp_type = factor(combined_ideal_real$samp_type)
combined_ideal_real$prop_capt = as.numeric(combined_ideal_real$prop_capt)
combined_ideal_real$maternal_trees = as.numeric(combined_ideal_real$maternal_trees)
#defining more descriptive labels for the facets
mat_tree_labs = c("2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
names(mat_tree_labs) = c("2", "5", "10", "25", "50", "100")
#defining a color palette to use for the plots (color-blind accessible)
cbPalette <- c("#E69F00", "#f5d58e", "#56B4E9", "#96daf2", "#CC79A7", "#fcd2e9")
#Plotting the data
combined_ideal_real %>%
filter(total_seeds==200) %>%
filter(as.numeric(maternal_trees)>1) %>%
ggplot() +
geom_boxplot(aes(x=donor_type, y=as.numeric(prop_capt), color=interaction(samp_type, donor_type))) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0.25,1) +
ggtitle("Genetic diversity capture for scenarios with 200 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
labs(color = "Sampling Type") +
scale_x_discrete(labels=c("Eligible","Same","Skewed")) +
scale_colour_manual(values=cbPalette, labels = c("Eligible ideal", "Eligible realistic", "Skewed ideal", "Skewed realistic", "Same ideal", "Same realistic"))
#Plotting the data
combined_ideal_real %>%
filter(total_seeds==200) %>%
filter(as.numeric(maternal_trees)>1) %>%
ggplot() +
geom_boxplot(aes(x=donor_type, y=as.numeric(prop_capt), color=interaction(samp_type, donor_type))) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0.3,1) +
ggtitle("Genetic diversity capture for scenarios with 200 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
labs(color = "Sampling Type") +
scale_x_discrete(labels=c("Eligible","Same","Skewed")) +
scale_colour_manual(values=cbPalette, labels = c("Eligible ideal", "Eligible realistic", "Skewed ideal", "Skewed realistic", "Same ideal", "Same realistic"))
