tidy_df_realistic$samp_type = "realistic"
#Combine dataframes
combined_ideal_real = rbind(tidy_df, tidy_df_realistic)
#Make sure variables are in the correct format
combined_ideal_real$donor_type = factor(combined_ideal_real$donor_type)
combined_ideal_real$samp_type = factor(combined_ideal_real$samp_type)
combined_ideal_real$prop_capt = as.numeric(combined_ideal_real$prop_capt)
combined_ideal_real$maternal_trees = as.numeric(combined_ideal_real$maternal_trees)
#defining more descriptive labels for the facets
mat_tree_labs = c("2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
names(mat_tree_labs) = c("2", "5", "10", "25", "50", "100")
#defining a color palette to use for the plots (color-blind accessible)
cbPalette <- c("#E69F00", "#f5d58e", "#56B4E9", "#96daf2", "#CC79A7", "#fcd2e9")
cbPalette <- c("#539165", "#3d6b4a", "#C7E9B0", "#a8d18c", "#9DC08B", "#7f9c70")
#Plotting the data
combined_ideal_real %>%
filter(total_seeds==200) %>%
filter(as.numeric(maternal_trees)>1) %>%
ggplot() +
geom_boxplot(aes(x=donor_type, y=as.numeric(prop_capt), color=interaction(samp_type, donor_type))) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0.3,1) +
ggtitle("Genetic diversity capture for scenarios with 200 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
labs(color = "Sampling Type") +
scale_x_discrete(labels=c("Eligible","Same","Skewed")) +
scale_colour_manual(values=cbPalette, labels = c("Eligible ideal", "Eligible realistic", "Same ideal", "Same realistic", "Skewed ideal", "Skewed realistic"))
cbPalette <- c("#539165", "#367a9c", "#C7E9B0", "#73bade", "#9DC08B", "#b7e2f7")
#Plotting the data
combined_ideal_real %>%
filter(total_seeds==200) %>%
filter(as.numeric(maternal_trees)>1) %>%
ggplot() +
geom_boxplot(aes(x=donor_type, y=as.numeric(prop_capt), color=interaction(samp_type, donor_type))) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0.3,1) +
ggtitle("Genetic diversity capture for scenarios with 200 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
labs(color = "Sampling Type") +
scale_x_discrete(labels=c("Eligible","Same","Skewed")) +
scale_colour_manual(values=cbPalette, labels = c("Eligible ideal", "Eligible realistic", "Single ideal", "Single realistic", "Skewed ideal", "Skewed realistic"))
cbPalette <- c("#539165", "#367a9c", "#C7E9B0", "#73bade", "#9DC08B", "#b7e2f7")
#Plotting the data
combined_ideal_real %>%
filter(total_seeds==200) %>%
filter(as.numeric(maternal_trees)>1) %>%
ggplot() +
geom_boxplot(aes(x=donor_type, y=as.numeric(prop_capt), color=interaction(samp_type, donor_type))) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0.3,1) +
ggtitle("Genetic diversity capture for scenarios with 200 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
labs(color = "Sampling Type") +
scale_x_discrete(labels=c("Eligible","Same","Skewed")) +
scale_colour_manual(values=cbPalette, labels = c("Eligible ideal", "Eligible realistic", "Single ideal", "Single realistic", "Skewed ideal", "Skewed realistic"))
#Plotting the data
combined_ideal_real %>%
filter(total_seeds==400) %>%
filter(as.numeric(maternal_trees)>1) %>%
ggplot() +
geom_boxplot(aes(x=donor_type, y=as.numeric(prop_capt), color=interaction(samp_type, donor_type))) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0.3,1) +
ggtitle("Genetic diversity capture for scenarios with 200 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
labs(color = "Sampling Type") +
scale_x_discrete(labels=c("Eligible","Same","Skewed")) +
scale_colour_manual(values=cbPalette, labels = c("Eligible ideal", "Eligible realistic", "Single ideal", "Single realistic", "Skewed ideal", "Skewed realistic"))
#Plotting the data
combined_ideal_real %>%
filter(total_seeds==400) %>%
filter(as.numeric(maternal_trees)>1) %>%
ggplot() +
geom_boxplot(aes(x=donor_type, y=as.numeric(prop_capt), color=interaction(samp_type, donor_type))) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0.3,1) +
ggtitle("Genetic diversity capture for scenarios with 400 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
labs(color = "Sampling Type") +
scale_x_discrete(labels=c("Eligible","Same","Skewed")) +
scale_colour_manual(values=cbPalette, labels = c("Eligible ideal", "Eligible realistic", "Single ideal", "Single realistic", "Skewed ideal", "Skewed realistic"))
#Load in data
#load("Rdata/tidy_df.Rdata")
#Two pop data:
load("Rdata/tidy_df_ideal_twopop.Rdata")
#Converting these to numeric--they already should be, but they must have been converted accidentally when making the matrix a dataframe, etc...
tidy_df$prop_capt = as.numeric(tidy_df$prop_capt)
tidy_df$total_seeds = as.numeric(tidy_df$total_seeds)
tidy_df$maternal_trees = as.numeric(tidy_df$maternal_trees)
#Subset the data by maternal tree to run two separate models
sub_1 = tidy_df %>% subset(maternal_trees < 25)
sub_2 = tidy_df %>% subset(maternal_trees >= 25)
#Running the models
model_1 = lm(prop_capt ~ log(total_seeds) * log(maternal_trees) * donor_type, data = sub_1)
model_2 = lm(prop_capt ~ total_seeds * maternal_trees * donor_type, data = sub_2)
#Creating a new dataframe of values to base predictions on
newd_1 = data.frame(maternal_trees=(rep(c(1,2,5,10), each=1500)), total_seeds=rep(seq(1,500,1),12), donor_type=factor(rep((rep(c("all_eligible", "all_same", "skewed"), each=500)), 4)))
#Predictions
pmu_1 = predict(model_1, re.form=NA, transform = TRUE, newdata=newd_1)
newd_2 = data.frame(maternal_trees=(rep(c(25,50,100), each=1500)), total_seeds=rep(seq(1,500,1),9), donor_type=factor(rep((rep(c("all_eligible", "all_same", "skewed"), each=500)), 3)))
#Predictions
pmu_2 = predict(model_2, re.form=NA, transform = TRUE, newdata=newd_2)
#Creating a dataframe to plot in ggplot
preds_1 <- cbind(newd_1, pmu_1)
colnames(preds_1) = c("maternal_trees", "total_seeds", "donor_type", "pmu")
preds_2 <- cbind(newd_2, pmu_2)
colnames(preds_2) = c("maternal_trees", "total_seeds", "donor_type", "pmu")
preds = rbind(preds_1, preds_2)
#defining a color palette to use for the plots (color-blind accessible)
cbPalette <- c("#539165", "#C7E9B0", "#9DC08B")
#defining more descriptive labels for the facets
mat_tree_labs = c("1 maternal tree", "2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
names(mat_tree_labs) = c("1", "2", "5", "10", "25", "50", "100")
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(data=preds, mapping = aes(x=total_seeds, y=pmu, lty=donor_type), show.legend=F) +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "Single", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
#Load libraries required for the whole script
#library(rstanarm)
#options(mc.cores = parallel::detectCores())
library(dplyr)
library(tidyr)
library(ggplot2)
theme_set(theme_bw())
#Load in data
load("Rdata/tidy_df_realistic.Rdata")
#Converting these to numeric--they already should be, but they must have been converted accidentally when making the matrix a dataframe, etc...
tidy_df$prop_capt = as.numeric(tidy_df$prop_capt)
tidy_df$total_seeds = as.numeric(tidy_df$total_seeds)
tidy_df$maternal_trees = as.numeric(tidy_df$maternal_trees)
#Subset the data by maternal tree to run two separate models
sub_1 = tidy_df %>% subset(maternal_trees < 25)
sub_2 = tidy_df %>% subset(maternal_trees >= 25)
#Running the models
model_1 = lm(prop_capt ~ log(total_seeds) * log(maternal_trees) * donor_type, data = sub_1)
model_2 = lm(prop_capt ~ total_seeds * maternal_trees * donor_type, data = sub_2)
#Creating a new dataframe of values to base predictions on
newd_1 = data.frame(maternal_trees=(rep(c(2,5,10), each=1500)), total_seeds=rep(seq(1,500,1),9), donor_type=factor(rep((rep(c("all_eligible", "all_same", "skewed"), each=500)), 3)))
#Predictions
pmu_1 = predict(model_1, re.form=NA, transform = TRUE, newdata=newd_1)
newd_2 = data.frame(maternal_trees=(rep(c(25,50,100), each=1500)), total_seeds=rep(seq(1,500,1),9), donor_type=factor(rep((rep(c("all_eligible", "all_same", "skewed"), each=500)), 3)))
#Predictions
pmu_2 = predict(model_2, re.form=NA, transform = TRUE, newdata=newd_2)
#Creating a dataframe to plot in ggplot
preds_1 <- cbind(newd_1, pmu_1)
colnames(preds_1) = c("maternal_trees", "total_seeds", "donor_type", "pmu")
preds_2 <- cbind(newd_2, pmu_2)
colnames(preds_2) = c("maternal_trees", "total_seeds", "donor_type", "pmu")
preds = rbind(preds_1, preds_2)
#defining a color palette to use for the plots (color-blind accessible)
cbPalette = c("#367a9c", "#b7e2f7", "#73bade")
#defining more descriptive labels for the facets
mat_tree_labs = c("2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees") #removed 1 maternal tree
names(mat_tree_labs) = c("2", "5", "10", "25", "50", "100") #removed 1
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(data=preds, mapping = aes(x=total_seeds, y=pmu, lty=donor_type), show.legend=F) +
ggtitle("Genetic diversity capture across all realistic sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "Single", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds*2), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(data=preds, mapping = aes(x=(total_seeds), y=pmu, lty=donor_type), show.legend=F) +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "Single", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds*2), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(data=preds, mapping = aes(x=(total_seeds*2), y=pmu, lty=donor_type), show.legend=F) +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "Single", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
#Load libraries
library(dplyr)
library(tidyr)
library(ggplot2)
theme_set(theme_bw())
#Load in data
#load("Rdata/tidy_df.Rdata")
#Two pop data:
load("Rdata/tidy_df_ideal_twopop.Rdata")
#Making sure the data is in the correct format
tidy_df$prop_capt = as.numeric(tidy_df$prop_capt)
tidy_df$total_seeds = as.numeric(tidy_df$total_seeds)
tidy_df$maternal_trees = as.numeric(tidy_df$maternal_trees)
ggplot(tidy_df, aes(x=as.numeric(total_alleles))) +
geom_bar() +
ggtitle("Variation of total alleles simulated across replicates") +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank())
#defining a color palette to use for the plots (color-blind accessible)
cbPalette <- c("#539165", "#C7E9B0", "#9DC08B")
#defining more descriptive labels for the facets
mat_tree_labs = c("1", "2", "5", "10", "25", "50", "100")
names(mat_tree_labs) = c("1 maternal tree", "2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
tidy_df %>%
ggplot(aes(x=as.numeric(total_seeds), y=as.numeric(prop_capt), color=donor_type)) +
geom_point() +
facet_wrap(vars(as.numeric(maternal_trees)), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0,1) +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "Single", "Skewed")) +
labs(color = "Donor Type")
tidy_df %>%
filter(total_seeds==200) %>%
ggplot(aes(x=donor_type, y=as.numeric(prop_capt), color=donor_type)) +
geom_boxplot() +
facet_wrap(vars(as.numeric(maternal_trees)), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0,1) +
ggtitle("Genetic diversity capture for ideal scenarios with 200 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "Single", "Skewed")) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(color = "Donor Type")
tidy_df %>%
filter(total_seeds==400) %>%
ggplot(aes(x=donor_type, y=as.numeric(prop_capt), color=donor_type)) +
geom_boxplot() +
facet_wrap(vars(as.numeric(maternal_trees)), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0,1) +
ggtitle("Genetic diversity capture for ideal scenarios with 400 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "Single", "Skewed")) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(color = "Donor Type")
#Load in data
#load("Rdata/tidy_df_realistic.Rdata")
#Two pop data:
load("Rdata/tidy_df_realistic_twopop.Rdata")
tidy_df_realistic = tidy_df
#Making sure the data is in the correct format
tidy_df_realistic$prop_capt = as.numeric(tidy_df$prop_capt)
tidy_df_realistic$total_seeds = as.numeric(tidy_df$total_seeds)
tidy_df_realistic$maternal_trees = as.numeric(tidy_df$maternal_trees)
#defining a color palette to use for the plots (color-blind accessible)
cbPalette = c("#367a9c", "#b7e2f7", "#73bade")
#defining more descriptive labels for the facets
mat_tree_labs = c("1 maternal tree", "2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
names(mat_tree_labs) = c("1", "2", "5", "10", "25", "50", "100")
tidy_df_realistic %>%
ggplot(aes(x=as.numeric(total_seeds), y=as.numeric(prop_capt), color=donor_type)) +
geom_point() +
facet_wrap(vars(as.numeric(maternal_trees)), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0,1) +
ggtitle("Genetic diversity capture across all realistic sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "Single", "Skewed")) +
labs(color = "Donor Type")
tidy_df_realistic %>%
filter(total_seeds==200) %>%
ggplot(aes(x=donor_type, y=as.numeric(prop_capt), color=donor_type)) +
geom_boxplot() +
facet_wrap(vars(as.numeric(maternal_trees)), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0,1) +
ggtitle("Genetic diversity capture for realistic scenarios with 200 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "Single", "Skewed")) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(color = "Donor Type")
tidy_df_realistic %>%
filter(total_seeds==400) %>%
ggplot(aes(x=donor_type, y=as.numeric(prop_capt), color=donor_type)) +
geom_boxplot() +
facet_wrap(vars(as.numeric(maternal_trees)), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0,1) +
ggtitle("Genetic diversity capture for realistic scenarios with 400 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "Single", "Skewed")) +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
labs(color = "Donor Type")
#load("Rdata/tidy_df.Rdata")
#Two pops
load("Rdata/tidy_df_ideal_twopop.Rdata")
#Making sure the data is in the correct format
tidy_df$prop_capt = as.numeric(tidy_df$prop_capt)
tidy_df$total_seeds = as.numeric(tidy_df$total_seeds)
tidy_df$maternal_trees = as.numeric(tidy_df$maternal_trees)
#remove col to make same # cols
tidy_df = subset(tidy_df, select = -c(seeds_per_tree))
#remove col to make same # cols
#tidy_df = subset(tidy_df, select = -c(seeds_per_tree))
#Create new columns to identify scenarios
tidy_df$samp_type = "ideal"
tidy_df_realistic$samp_type = "realistic"
#Combine dataframes
combined_ideal_real = rbind(tidy_df, tidy_df_realistic)
#Make sure variables are in the correct format
combined_ideal_real$donor_type = factor(combined_ideal_real$donor_type)
combined_ideal_real$samp_type = factor(combined_ideal_real$samp_type)
combined_ideal_real$prop_capt = as.numeric(combined_ideal_real$prop_capt)
combined_ideal_real$maternal_trees = as.numeric(combined_ideal_real$maternal_trees)
#defining more descriptive labels for the facets
mat_tree_labs = c("2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
names(mat_tree_labs) = c("2", "5", "10", "25", "50", "100")
#defining a color palette to use for the plots (color-blind accessible)
cbPalette <- c("#539165", "#367a9c", "#C7E9B0", "#b7e2f7", "#9DC08B", "#73bade")
#Plotting the data
combined_ideal_real %>%
filter(total_seeds==200) %>%
filter(as.numeric(maternal_trees)>1) %>%
ggplot() +
geom_boxplot(aes(x=donor_type, y=as.numeric(prop_capt), color=interaction(samp_type, donor_type))) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
ylim(0.3,1) +
ggtitle("Genetic diversity capture for scenarios with 400 total seeds sampled") +
xlab("Donor type") +
ylab("Proportion of alleles captured") +
labs(color = "Sampling Type") +
scale_x_discrete(labels=c("Eligible","Same","Skewed")) +
scale_colour_manual(values=cbPalette, labels = c("Eligible ideal", "Eligible realistic", "Single ideal", "Single realistic", "Skewed ideal", "Skewed realistic"))
install.packages("mgcv")
#Load libraries required for the whole script
#library(rstanarm)
#options(mc.cores = parallel::detectCores())
library(dplyr)
#Load libraries required for the whole script
#library(rstanarm)
#options(mc.cores = parallel::detectCores())
library(dplyr)
library(tidyr)
library(ggplot2)
#Load libraries required for the whole script
#library(rstanarm)
#options(mc.cores = parallel::detectCores())
library(dplyr)
library(tidyr)
library(ggplot2)
library(mgcv)
#Load libraries required for the whole script
#library(rstanarm)
#options(mc.cores = parallel::detectCores())
library(dplyr)
library(tidyr)
library(ggplot2)
library(mgcv)
theme_set(theme_bw())
#Load in data
#load("Rdata/tidy_df.Rdata")
#Two pop data:
load("Rdata/tidy_df_ideal.Rdata")
#Load in data
#load("Rdata/tidy_df.Rdata")
#Two pop data:
load("Rdata/tidy_df_ideal.Rdata")
#Converting these to numeric--they already should be, but they must have been converted accidentally when making the matrix a dataframe, etc...
tidy_df$prop_capt = as.numeric(tidy_df$prop_capt)
tidy_df$total_seeds = as.numeric(tidy_df$total_seeds)
tidy_df$maternal_trees = as.numeric(tidy_df$maternal_trees)
GAMM = gamm(prop_capt ~ total_seeds * maternal_trees * donor_type, data = tidy_df)
install.packages("gam")
library(gam)
library(gam)
theme_set(theme_bw())
#Load in data
#load("Rdata/tidy_df.Rdata")
#Two pop data:
load("Rdata/tidy_df_ideal.Rdata")
#Converting these to numeric--they already should be, but they must have been converted accidentally when making the matrix a dataframe, etc...
tidy_df$prop_capt = as.numeric(tidy_df$prop_capt)
tidy_df$total_seeds = as.numeric(tidy_df$total_seeds)
tidy_df$maternal_trees = as.numeric(tidy_df$maternal_trees)
GAM = gam(prop_capt ~ total_seeds * maternal_trees * donor_type, data = tidy_df)
#Creating a new dataframe of values to base predictions on
newd = data.frame(maternal_trees=(rep(c(1,2,5,10,25,50,100), each=1500)), total_seeds=rep(seq(1,500,1),21), donor_type=factor(rep((rep(c("all_eligible", "all_same", "skewed"), each=500)), 7)))
#Predictions
pmu = predict(GAM, re.form=NA, transform = TRUE, newdata=newd_1)
#Predictions
pmu = predict(GAM, re.form=NA, transform = TRUE, newdata=newd)
#Creating a dataframe to plot in ggplot
preds <- cbind(newd, pmu)
colnames(preds) = c("maternal_trees", "total_seeds", "donor_type", "pmu")
#defining a color palette to use for the plots (color-blind accessible)
cbPalette <- c("#539165", "#C7E9B0", "#9DC08B")
#defining more descriptive labels for the facets
mat_tree_labs = c("1 maternal tree", "2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
names(mat_tree_labs) = c("1", "2", "5", "10", "25", "50", "100")
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds*2), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(data=preds, mapping = aes(x=(total_seeds*2), y=pmu, lty=donor_type), show.legend=F) +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "Single", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
GAM = gam(prop_capt ~ s(total_seeds) * s(maternal_trees) * s(donor_type), data = tidy_df)
GAM = gam(prop_capt ~ s(total_seeds) * s(maternal_trees) * donor_type, data = tidy_df)
#Creating a new dataframe of values to base predictions on
newd = data.frame(maternal_trees=(rep(c(1,2,5,10,25,50,100), each=1500)), total_seeds=rep(seq(1,500,1),21), donor_type=factor(rep((rep(c("all_eligible", "all_same", "skewed"), each=500)), 7)))
#Predictions
pmu = predict(GAM, re.form=NA, transform = TRUE, newdata=newd)
#Creating a dataframe to plot in ggplot
preds <- cbind(newd, pmu)
colnames(preds) = c("maternal_trees", "total_seeds", "donor_type", "pmu")
#defining a color palette to use for the plots (color-blind accessible)
cbPalette <- c("#539165", "#C7E9B0", "#9DC08B")
#defining more descriptive labels for the facets
mat_tree_labs = c("1 maternal tree", "2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
names(mat_tree_labs) = c("1", "2", "5", "10", "25", "50", "100")
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds*2), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(data=preds, mapping = aes(x=(total_seeds*2), y=pmu, lty=donor_type), show.legend=F) +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "Single", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
#Load libraries required for the whole script
#library(rstanarm)
#options(mc.cores = parallel::detectCores())
library(dplyr)
library(tidyr)
library(ggplot2)
theme_set(theme_bw())
#Load in data
load("Rdata/tidy_df.Rdata")
#Load in data
load("Rdata/tidy_df_ideal.Rdata")
#Converting these to numeric--they already should be, but they must have been converted accidentally when making the matrix a dataframe, etc...
tidy_df$prop_capt = as.numeric(tidy_df$prop_capt)
tidy_df$total_seeds = as.numeric(tidy_df$total_seeds)
tidy_df$maternal_trees = as.numeric(tidy_df$maternal_trees)
#Subset the data by maternal tree to run two separate models
sub_1 = tidy_df %>% subset(maternal_trees < 25)
sub_2 = tidy_df %>% subset(maternal_trees >= 25)
#Running the models
model_1 = lm(prop_capt ~ log(total_seeds) * log(maternal_trees) * donor_type, data = sub_1)
model_2 = lm(prop_capt ~ total_seeds * maternal_trees * donor_type, data = sub_2)
#Creating a new dataframe of values to base predictions on
newd_1 = data.frame(maternal_trees=(rep(c(1,2,5,10), each=1500)), total_seeds=rep(seq(1,500,1),12), donor_type=factor(rep((rep(c("all_eligible", "all_same", "skewed"), each=500)), 4)))
#Predictions
pmu_1 = predict(model_1, re.form=NA, transform = TRUE, newdata=newd_1)
newd_2 = data.frame(maternal_trees=(rep(c(25,50,100), each=1500)), total_seeds=rep(seq(1,500,1),9), donor_type=factor(rep((rep(c("all_eligible", "all_same", "skewed"), each=500)), 3)))
#Predictions
pmu_2 = predict(model_2, re.form=NA, transform = TRUE, newdata=newd_2)
#Creating a dataframe to plot in ggplot
preds_1 <- cbind(newd_1, pmu_1)
colnames(preds_1) = c("maternal_trees", "total_seeds", "donor_type", "pmu")
preds_2 <- cbind(newd_2, pmu_2)
colnames(preds_2) = c("maternal_trees", "total_seeds", "donor_type", "pmu")
preds = rbind(preds_1, preds_2)
#defining a color palette to use for the plots (color-blind accessible)
cbPalette <- c("#E69F00", "#56B4E9", "#CC79A7")
#defining more descriptive labels for the facets
mat_tree_labs = c("1 maternal tree", "2 maternal trees", "5 maternal trees", "10 maternal trees", "25 maternal trees", "50 maternal trees", "100 maternal trees")
names(mat_tree_labs) = c("1", "2", "5", "10", "25", "50", "100")
#Plotting the data
ggplot(data=preds) +
geom_point(data = tidy_df, aes(x=as.numeric(total_seeds*2), y=as.numeric(prop_capt), color=donor_type), alpha=0.25) +
facet_wrap(vars(maternal_trees), labeller = labeller(maternal_trees = mat_tree_labs)) +
geom_line(data=preds, mapping = aes(x=(total_seeds*2), y=pmu, lty=donor_type), show.legend=F) +
ggtitle("Genetic diversity capture across all ideal sampling scenarios") +
ylab("Proportion of alleles captured") +
xlab("Total seeds sampled") +
scale_colour_manual(values=cbPalette, labels = c("All eligible", "Single", "Skewed")) +
theme(strip.background = element_rect(color="black", fill="#F2F2F2", linetype="solid")) +
labs(color = "Donor Type")
