test_list = list(kaylee, rose)
test_list = list(20, 22)
test_list
append(test_list, 30)
test_list
test_list = append(test_list, 30)
test_list
i =1
$i
i
paste(l, i)
paste("l", i)
paste("l", i, sep="")
x=1
x++
++x
x = 1 #x is the list counter variable that names each of the lists
i=1
paste("l", x, sep="") = list(50, i, i, 1) #all same
paste("l", x, sep="")
paste("l", x, sep="") = list(12)
paste('l', x, sep='') = list(12)
paste('l', x, sep='') = list(12)
paste(l, x, sep='')
paste('list', x, sep='')
string(list1)
paste('list', x, sep='')
var = paste('list', x, sep='')
var
noquote(paste('list', x, sep=''))
noquote(paste("l", x, sep="")) = list(50, i, i, 1) #all same
noquote(paste('list', x, sep=''))
list1 = list(50,i,i,1)
list1
(noquote(paste("l", x, sep=""))) = list(50, i, i, 1) #all same
(noquote(paste("list", x, sep="")))
list1= null
list1= NULL
list1
(noquote(paste("list", x, sep=""))) = list(50, i, i, 1)
assign(paste("list", i, sep""), list(50,i,i1))
assign(paste("list", i, sep=""), list(50,i,i1))
assign(paste("list", i, sep=""), list(50,i,i,1))
list1
list1= NULL
NULL
list1
assign(paste("list", i, sep=""), list(50,i,i,1))
list1
x=1
i=1
list1= NULL
NULL
assign(paste("list", i, sep=""), list(50, i, i, 1)) #all same
x=x+1
assign(paste("list", i, sep=""), list(50, i, i, (1/i))) #all unique*
x=x+1
assign(paste("list", i, sep=""), list(50, i, i, c(0.8, rep((0.2/i), i)))) #skewed-- one donates 80% of the pollen, rest is split up evenly between the rest
x=x+1
list1
list2DF()
list2
x=1
i=1
list1= NULL
list1
list2
assign(paste("list", x, sep=""), list(50, i, i, 1)) #all same
x=x+1
assign(paste("list", x, sep=""), list(50, i, i, (1/i))) #all unique*
x=x+1
assign(paste("list", x, sep=""), list(50, i, i, c(0.8, rep((0.2/i), i)))) #skewed-- one donates 80% of the pollen, rest is split up evenly between the rest
x=x+1
list1
list2
list3
x=1
i=1
list1=NULL
list2=NULL
list3=NULL
x = 1 #x is the list counter variable that names each of the lists
for(i in 1:5){
assign(paste("list", x, sep=""), list(50, i, i, 1)) #all same
x=x+1
assign(paste("list", x, sep=""), list(50, i, i, (1/i))) #all unique*
x=x+1
assign(paste("list", x, sep=""), list(50, i, i, c(0.8, rep((0.2/i), i)))) #skewed-- one donates 80% of the pollen, rest is split up evenly between the rest
x=x+1
}
list15
i
x = 1 #x is the list counter variable that names each of the lists
for(i in 1:5){
assign(paste("list", x, sep=""), list(50, i, i, 1)) #all same
x=x+1
assign(paste("list", x, sep=""), list(50, i, i, (1/i))) #all unique*
x=x+1
assign(paste("list", x, sep=""), list(50, i, i, c(0.8, rep((0.2/(i=1)), i)))) #skewed-- one donates 80% of the pollen, rest is split up evenly between the rest
x=x+1
}
list3
list6
x = 1 #x is the list counter variable that names each of the lists
for(i in 1:5){
assign(paste("list", x, sep=""), list(50, i, i, 1)) #all same
x=x+1
assign(paste("list", x, sep=""), list(50, i, i, (1/i))) #all unique*
x=x+1
#skewed
if(i=1){
assign(paste("list", x, sep=""), list(50, i, i, 1)) #if there's only one seed, it can't be skewed
} else {
assign(paste("list", x, sep=""), list(50, i, i, c(0.8, rep((0.2/(i-1)), i)))) #skewed-- one donates 80% of the pollen, rest is split up evenly between the rest
}
x=x+1
}
x = 1 #x is the list counter variable that names each of the lists
for(i in 1:5){
assign(paste("list", x, sep=""), list(50, i, i, 1)) #all same
x=x+1
assign(paste("list", x, sep=""), list(50, i, i, (1/i))) #all unique*
x=x+1
#skewed
if(i=1){
assign(paste("list", x, sep=""), list(50, i, i, 1)) #if there's only one seed, it can't be skewed
}else{
assign(paste("list", x, sep=""), list(50, i, i, c(0.8, rep((0.2/(i-1)), i)))) #skewed-- one donates 80% of the pollen, rest is split up evenly between the rest
}
x=x+1
}
x = 1 #x is the list counter variable that names each of the lists
for(i in 1:5){
assign(paste("list", x, sep=""), list(50, i, i, 1)) #all same
x=x+1
assign(paste("list", x, sep=""), list(50, i, i, (1/i))) #all unique*
x=x+1
#skewed
if(i=1){
assign(paste("list", x, sep=""), list(50, i, i, 1)) #if there's only one seed, it can't be skewed
} else {
assign(paste("list", x, sep=""), list(50, i, i, c(0.8, rep((0.2/(i-1)), i)))) #skewed-- one donates 80% of the pollen, rest is split up evenly between the rest
}
x=x+1
}
i=3
assign(paste("list", x, sep=""), list(50, i, i, 1)) #all same
x=x+1
assign(paste("list", x, sep=""), list(50, i, i, (1/i))) #all unique*
x=x+1
#skewed
if(i=1) {
assign(paste("list", x, sep=""), list(50, i, i, 1)) #if there's only one seed, it can't be skewed
} else {
assign(paste("list", x, sep=""), list(50, i, i, c(0.8, rep((0.2/(i-1)), (i-1))))
}
x=x+1
}
i==1
#skewed
if(i==1){
assign(paste("list", x, sep=""), list(50, i, i, 1)) #if there's only one seed, it can't be skewed
} else {
assign(paste("list", x, sep=""), list(50, i, i, c(0.8, rep((0.2/(i-1)), (i-1))))
}
x=x+1
}
i!=1
i=3
#skewed
if(i==1){
assign(paste("list", x, sep=""), list(50, i, i, 1)) #if there's only one seed, it can't be skewed
} else if (i!=1) {
assign(paste("list", x, sep=""), list(50, i, i, c(0.8, rep((0.2/(i-1)), (i-1)))))
}
x
list6
x = 1 #x is the list counter variable that names each of the lists
for(i in 1:5) {
assign(paste("list", x, sep=""), list(50, i, i, 1)) #all same
x=x+1
assign(paste("list", x, sep=""), list(50, i, i, (1/i))) #all unique*
x=x+1
#skewed
if(i==1){
assign(paste("list", x, sep=""), list(50, i, i, 1)) #if there's only one seed, it can't be skewed
} else if (i!=1) {
assign(paste("list", x, sep=""), list(50, i, i, c(0.8, rep((0.2/(i-1)), (i-1)))))
}
x=x+1
}
list3
x = 1 #x is the list counter variable that names each of the lists
for(i in 1:5) {
assign(paste("list", x, sep=""), c(50, i, i, 1)) #all same
x=x+1
assign(paste("list", x, sep=""), c(50, i, i, (1/i))) #all unique*
x=x+1
#skewed
if(i==1){
assign(paste("list", x, sep=""), c(50, i, i, 1)) #if there's only one seed, it can't be skewed
} else if (i!=1) {
assign(paste("list", x, sep=""), c(50, i, i, c(0.8, rep((0.2/(i-1)), (i-1)))))
}
x=x+1
}
list1
x = 1 #x is the list counter variable that names each of the lists
for(i in 1:5) {
assign(paste("v", x, sep=""), c(50, i, i, 1)) #all same
x=x+1
assign(paste("v", x, sep=""), c(50, i, i, (1/i))) #all unique*
x=x+1
#skewed
if(i==1){
assign(paste("v", x, sep=""), c(50, i, i, 1)) #if there's only one seed, it can't be skewed
} else if (i!=1) {
assign(paste("v", x, sep=""), c(50, i, i, c(0.8, rep((0.2/(i-1)), (i-1)))))
}
x=x+1
}
v3
v6
x = 1 #x is the list counter variable that names each of the lists
for(i in 1:5) {
assign(paste("v", x, sep=""), c(50, i, i, 1)) #all same
x=x+1
assign(paste("v", x, sep=""), c(50, i, i, rep((1/i), i))) #all unique*
x=x+1
#skewed
if(i==1){
assign(paste("v", x, sep=""), c(50, i, i, 1)) #if there's only one seed, it can't be skewed
} else if (i!=1) {
assign(paste("v", x, sep=""), c(50, i, i, c(0.8, rep((0.2/(i-1)), (i-1)))))
}
x=x+1
}
x = 1 #x is the list counter variable that names each of the lists
for(i in 1:5) {
assign(paste("v", x, sep=""), list(50, i, i, 1)) #all same
x=x+1
assign(paste("v", x, sep=""), list(50, i, i, rep((1/i), i))) #all unique*
x=x+1
#skewed
if(i==1){
assign(paste("v", x, sep=""), list(50, i, i, 1)) #if there's only one seed, it can't be skewed
} else if (i!=1) {
assign(paste("v", x, sep=""), list(50, i, i, c(0.8, rep((0.2/(i-1)), (i-1)))))
}
x=x+1
}
list 5
list5
x = 1 #x is the list counter variable that names each of the lists
for(i in 1:5) {
assign(paste("list", x, sep=""), list(50, i, i, 1)) #all same
x=x+1
assign(paste("list", x, sep=""), list(50, i, i, rep((1/i), i))) #all unique*
x=x+1
#skewed
if(i==1){
assign(paste("list", x, sep=""), list(50, i, i, 1)) #if there's only one seed, it can't be skewed
} else if (i!=1) {
assign(paste("list", x, sep=""), list(50, i, i, c(0.8, rep((0.2/(i-1)), (i-1)))))
}
x=x+1
}
list5
list6
list8
list9
as.vector(list9)
list9[[1]]
list9[[4]]
#50 maternal trees
x = 1 #x is the list counter variable that names each of the lists
for(i in 1:5) {
assign(paste("list", x, sep=""), list(50, i, 1, 1)) #all same
x=x+1
assign(paste("list", x, sep=""), list(50, i, i, c(rep((1/i), i)))) #all unique*
x=x+1
#skewed
if(i==1){
assign(paste("list", x, sep=""), list(50, i, 1, 1)) #if there's only one seed, it can't be skewed
} else if (i!=1) {
assign(paste("list", x, sep=""), list(50, i, i, c(0.8, rep((0.2/(i-1)), (i-1)))))
}
x=x+1
}
#25 maternal trees
for(i in 1:10){
assign(paste("list", x, sep=""), list(25,i,1,1)) #all same
x=x+1
assign(paste("list", x, sep=""), list(25,i,i, c(rep((1/i),i)))) #all unique*
x=x+1
#skewed
if(i==1){
assign(paste("list", x, sep=""), list(25, i, 1, 1)) #if there's only one seed, it can't be skewed
} else if (i!=1) {
assign(paste("list", x, sep=""), list(25, i, i, c(0.8, rep((0.2/(i-1)), (i-1)))))
}
x=x+1
}
list16
list20
list 23
list23
list45
#10 maternal trees
for(i in 1:20){
assign(paste("list", x, sep=""), list(10,i,1,1)) #all same
x=x+1
assign(paste("list", x, sep=""), list(10,i,i, c(rep((1/i),i)))) #all unique*
x=x+1
#skewed
if(i==1){
assign(paste("list", x, sep=""), list(10, i, 1, 1)) #if there's only one seed, it can't be skewed
} else if (i!=1) {
assign(paste("list", x, sep=""), list(10, i, i, c(0.8, rep((0.2/(i-1)), (i-1)))))
}
x=x+1
}
#5 maternal trees
for(i in 1:50){
assign(paste("list", x, sep=""), list(5,i,1,1)) #all same
x=x+1
assign(paste("list", x, sep=""), list(5,i,i, c(rep((1/i),i)))) #all unique*
x=x+1
#skewed
if(i==1){
assign(paste("list", x, sep=""), list(5, i, 1, 1)) #if there's only one seed, it can't be skewed
} else if (i!=1) {
assign(paste("list", x, sep=""), list(5, i, i, c(0.8, rep((0.2/(i-1)), (i-1)))))
}
x=x+1
}
#2 maternal trees
for(i in 1:100){
assign(paste("list", x, sep=""), list(2,i,1,1)) #all same
x=x+1
assign(paste("list", x, sep=""), list(2,i,i, c(rep((1/i),i)))) #all unique*
x=x+1
#skewed
if(i==1){
assign(paste("list", x, sep=""), list(2, i, 1, 1)) #if there's only one seed, it can't be skewed
} else if (i!=1) {
assign(paste("list", x, sep=""), list(2, i, i, c(0.8, rep((0.2/(i-1)), (i-1)))))
}
x=x+1
}
#1 maternal tree
for(i in 1:250){
assign(paste("list", x, sep=""), list(1,i,1,1)) #all same
x=x+1
assign(paste("list", x, sep=""), list(1,i,i, c(rep((1/i),i)))) #all unique*
x=x+1
#skewed
if(i==1){
assign(paste("list", x, sep=""), list(1, i, 1, 1)) #if there's only one seed, it can't be skewed
} else if (i!=1) {
assign(paste("list", x, sep=""), list(1, i, i, c(0.8, rep((0.2/(i-1)), (i-1)))))
}
x=x+1
}
list430
list435
list436
list437
list1305
