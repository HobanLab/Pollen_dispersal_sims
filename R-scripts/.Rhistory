theme(axis.title = element_blank()) +
ylim(0.2,1) +
theme(legend.position = "none")
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=(donor_type), y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
ggtitle("2 maternal trees, 100 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.2,1) +
theme(legend.position = "none")
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=(donor_type), y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
ggtitle("50 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.2,1) +
theme(legend.position = "none")
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=(factor(donor_type)), y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
ggtitle("50 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.2,1) +
theme(legend.position = "none")
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type), y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
ggtitle("50 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.2,1) +
theme(legend.position = "none")
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type), y=as.numeric(prop_capt), fill=scenario_type) +
geom_boxplot() +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
ggtitle("50 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.2,1) +
theme(legend.position = "none")
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type), y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
ggtitle("50 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.2,1) +
theme(legend.position = "none")
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
ggtitle("50 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.2,1) +
theme(legend.position = "none")
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("50 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.2,1) +
theme(legend.position = "none")
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("50 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.2,1))
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("50 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.2,1)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type, color=donor_type)) +
geom_boxplot() +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("50 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.2,1)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("50 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.2,1)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("50 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.8,1)
library(ggsignif)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE)
library(ggpubr)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("50 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.8,1)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("50 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.85,1)
#50 maternal trees 100 seeds
for(i in 1:50) {
same_25_10_equal[i,1] = prop_capt_all_same_equal[2,1,i] #this is hard coded to pull the scenario--having issues filtering data from a 3D array
same_25_10_equal[i,2] = prop_capt_all_same_equal[2,5,i]
same_25_10_equal[i,3] = "equal"
same_25_10_skewed[i,1] = prop_capt_all_same_skewed[1,1,i]
same_25_10_skewed[i,2] = prop_capt_all_same_skewed[1,5,i]
same_25_10_skewed[i,3] = "skewed"
eligible_25_10_equal[i,1] = prop_capt_all_eligible_equal[2,1,i]
eligible_25_10_equal[i,2] = prop_capt_all_eligible_equal[2,5,i]
eligible_25_10_equal[i,3] = "equal"
eligible_25_10_skewed[i,1] = prop_capt_all_eligible_skewed[1,1,i]
eligible_25_10_skewed[i,2] = prop_capt_all_eligible_skewed[1,5,i]
eligible_25_10_skewed[i,3] = "skewed"
skewed_25_10_equal[i,1] = prop_capt_skewed_equal[2,1,i]
skewed_25_10_equal[i,2] = prop_capt_skewed_equal[2,5,i]
skewed_25_10_equal[i,3] = "equal"
skewed_25_10_skewed[i,1] = prop_capt_skewed_skewed[1,1,i]
skewed_25_10_skewed[i,2] = prop_capt_skewed_skewed[1,5,i]
skewed_25_10_skewed[i,3] = "skewed"
}
#data processing for plotting
equal_comparison = rbind(same_25_10_equal, eligible_25_10_equal, skewed_25_10_equal, same_25_10_skewed, eligible_25_10_skewed, skewed_25_10_skewed)
equal_comparison = as.data.frame(equal_comparison)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("50 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.5,1)
#data processing for plotting
equal_comparison = rbind(same_25_10_equal, eligible_25_10_equal, skewed_25_10_equal, same_25_10_skewed, eligible_25_10_skewed, skewed_25_10_skewed)
equal_comparison = as.data.frame(equal_comparison)
colnames(equal_comparison) = c("prop_capt", "donor_type", "scenario_type")
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("50 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.5,1)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("50 maternal trees, 100 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.5,1)
#########################
#10 maternal trees 500 seeds
for(i in 1:50) {
same_25_10_equal[i,1] = prop_capt_all_same_equal[80,1,i] #this is hard coded to pull the scenario--having issues filtering data from a 3D array
same_25_10_equal[i,2] = prop_capt_all_same_equal[80,5,i]
same_25_10_equal[i,3] = "equal"
same_25_10_skewed[i,1] = prop_capt_all_same_skewed[40,1,i]
same_25_10_skewed[i,2] = prop_capt_all_same_skewed[40,5,i]
same_25_10_skewed[i,3] = "skewed"
eligible_25_10_equal[i,1] = prop_capt_all_eligible_equal[80,1,i]
eligible_25_10_equal[i,2] = prop_capt_all_eligible_equal[80,5,i]
eligible_25_10_equal[i,3] = "equal"
eligible_25_10_skewed[i,1] = prop_capt_all_eligible_skewed[40,1,i]
eligible_25_10_skewed[i,2] = prop_capt_all_eligible_skewed[40,5,i]
eligible_25_10_skewed[i,3] = "skewed"
skewed_25_10_equal[i,1] = prop_capt_skewed_equal[80,1,i]
skewed_25_10_equal[i,2] = prop_capt_skewed_equal[80,5,i]
skewed_25_10_equal[i,3] = "equal"
skewed_25_10_skewed[i,1] = prop_capt_skewed_skewed[40,1,i]
skewed_25_10_skewed[i,2] = prop_capt_skewed_skewed[40,5,i]
skewed_25_10_skewed[i,3] = "skewed"
}
#data processing for plotting
equal_comparison = rbind(same_25_10_equal, eligible_25_10_equal, skewed_25_10_equal, same_25_10_skewed, eligible_25_10_skewed, skewed_25_10_skewed)
equal_comparison = as.data.frame(equal_comparison)
colnames(equal_comparison) = c("prop_capt", "donor_type", "scenario_type")
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("10 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.5,1)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("10 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.5,1)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("10 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.55,0.9)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("10 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.55,1)
#########################
#10 maternal trees 100 seeds
for(i in 1:50) {
same_25_10_equal[i,1] = prop_capt_all_same_equal[40,1,i] #this is hard coded to pull the scenario--having issues filtering data from a 3D array
same_25_10_equal[i,2] = prop_capt_all_same_equal[40,5,i]
same_25_10_equal[i,3] = "equal"
same_25_10_skewed[i,1] = prop_capt_all_same_skewed[20,1,i]
same_25_10_skewed[i,2] = prop_capt_all_same_skewed[20,5,i]
same_25_10_skewed[i,3] = "skewed"
eligible_25_10_equal[i,1] = prop_capt_all_eligible_equal[40,1,i]
eligible_25_10_equal[i,2] = prop_capt_all_eligible_equal[40,5,i]
eligible_25_10_equal[i,3] = "equal"
eligible_25_10_skewed[i,1] = prop_capt_all_eligible_skewed[20,1,i]
eligible_25_10_skewed[i,2] = prop_capt_all_eligible_skewed[20,5,i]
eligible_25_10_skewed[i,3] = "skewed"
skewed_25_10_equal[i,1] = prop_capt_skewed_equal[40,1,i]
skewed_25_10_equal[i,2] = prop_capt_skewed_equal[40,5,i]
skewed_25_10_equal[i,3] = "equal"
skewed_25_10_skewed[i,1] = prop_capt_skewed_skewed[20,1,i]
skewed_25_10_skewed[i,2] = prop_capt_skewed_skewed[20,5,i]
skewed_25_10_skewed[i,3] = "skewed"
}
#data processing for plotting
equal_comparison = rbind(same_25_10_equal, eligible_25_10_equal, skewed_25_10_equal, same_25_10_skewed, eligible_25_10_skewed, skewed_25_10_skewed)
equal_comparison = as.data.frame(equal_comparison)
colnames(equal_comparison) = c("prop_capt", "donor_type", "scenario_type")
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("10 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.5,1)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("10 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.55,1)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("10 maternal trees, 100 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.55,1)
View(prop_capt_all_same_equal)
#########################
#2 maternal trees 500 seeds
for(i in 1:50) {
same_25_10_equal[i,1] = prop_capt_all_same_equal[430,1,i] #this is hard coded to pull the scenario--having issues filtering data from a 3D array
same_25_10_equal[i,2] = prop_capt_all_same_equal[430,5,i]
same_25_10_equal[i,3] = "equal"
same_25_10_skewed[i,1] = prop_capt_all_same_skewed[215,1,i]
same_25_10_skewed[i,2] = prop_capt_all_same_skewed[215,5,i]
same_25_10_skewed[i,3] = "skewed"
eligible_25_10_equal[i,1] = prop_capt_all_eligible_equal[430,1,i]
eligible_25_10_equal[i,2] = prop_capt_all_eligible_equal[430,5,i]
eligible_25_10_equal[i,3] = "equal"
eligible_25_10_skewed[i,1] = prop_capt_all_eligible_skewed[215,1,i]
eligible_25_10_skewed[i,2] = prop_capt_all_eligible_skewed[215,5,i]
eligible_25_10_skewed[i,3] = "skewed"
skewed_25_10_equal[i,1] = prop_capt_skewed_equal[430,1,i]
skewed_25_10_equal[i,2] = prop_capt_skewed_equal[430,5,i]
skewed_25_10_equal[i,3] = "equal"
skewed_25_10_skewed[i,1] = prop_capt_skewed_skewed[215,1,i]
skewed_25_10_skewed[i,2] = prop_capt_skewed_skewed[215,5,i]
skewed_25_10_skewed[i,3] = "skewed"
}
#data processing for plotting
equal_comparison = rbind(same_25_10_equal, eligible_25_10_equal, skewed_25_10_equal, same_25_10_skewed, eligible_25_10_skewed, skewed_25_10_skewed)
equal_comparison = as.data.frame(equal_comparison)
colnames(equal_comparison) = c("prop_capt", "donor_type", "scenario_type")
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("2 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.5,1)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("2 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0,1)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("2 maternal trees, 500 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.2,1)
#########################
#2 maternal trees 100 seeds
for(i in 1:50) {
same_25_10_equal[i,1] = prop_capt_all_same_equal[230,1,i] #this is hard coded to pull the scenario--having issues filtering data from a 3D array
same_25_10_equal[i,2] = prop_capt_all_same_equal[230,5,i]
same_25_10_equal[i,3] = "equal"
same_25_10_skewed[i,1] = prop_capt_all_same_skewed[135,1,i]
same_25_10_skewed[i,2] = prop_capt_all_same_skewed[135,5,i]
same_25_10_skewed[i,3] = "skewed"
eligible_25_10_equal[i,1] = prop_capt_all_eligible_equal[230,1,i]
eligible_25_10_equal[i,2] = prop_capt_all_eligible_equal[230,5,i]
eligible_25_10_equal[i,3] = "equal"
eligible_25_10_skewed[i,1] = prop_capt_all_eligible_skewed[135,1,i]
eligible_25_10_skewed[i,2] = prop_capt_all_eligible_skewed[135,5,i]
eligible_25_10_skewed[i,3] = "skewed"
skewed_25_10_equal[i,1] = prop_capt_skewed_equal[230,1,i]
skewed_25_10_equal[i,2] = prop_capt_skewed_equal[230,5,i]
skewed_25_10_equal[i,3] = "equal"
skewed_25_10_skewed[i,1] = prop_capt_skewed_skewed[135,1,i]
skewed_25_10_skewed[i,2] = prop_capt_skewed_skewed[135,5,i]
skewed_25_10_skewed[i,3] = "skewed"
}
#data processing for plotting
equal_comparison = rbind(same_25_10_equal, eligible_25_10_equal, skewed_25_10_equal, same_25_10_skewed, eligible_25_10_skewed, skewed_25_10_skewed)
equal_comparison = as.data.frame(equal_comparison)
colnames(equal_comparison) = c("prop_capt", "donor_type", "scenario_type")
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("2 maternal trees, 100 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.5,1)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("2 maternal trees, 100 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.0,1)
#plotting using a boxplot, includes all simulation replicates to note variation
ggplot(data=equal_comparison, aes(x=donor_type, y=as.numeric(prop_capt), fill=scenario_type)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE) +
ylab("Proportion of alleles captured") +
xlab("Pollen donation type") +
labs(color="donor_type", fill="scenario_type") +
ggtitle("2 maternal trees, 100 seeds total") +
scale_fill_manual(values = wes_palette("Moonrise3", n = 3)) +
theme_bw() +
theme(axis.title = element_blank()) +
ylim(0.2,1)
View(prop_capt_all_same_equal)
View(prop_capt_all_same_skewed)
